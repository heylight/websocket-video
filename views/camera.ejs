<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>录像</title>
  </head>
  <body>
    <div>直播id：<span class="title"></span></div>
    <div><button>传送</button></div>
    <video width="550" height="550" autoplay></video>
  </body>
  <script src="/js/socket.io-3.0.5.min.js"></script>
  <script>
    let isSending = false;
    let btn = document.querySelector("button");
    btn.addEventListener("click", function () {
      if (isSending) {
        btn.innerText = "传送";
        isSending = false;
      } else {
        btn.innerText = "停止";
        isSending = true;
      }
      console.log(isSending);
    });
    let socket = io();
    let video = document.querySelector("video");
    var canvas = document.createElement("canvas");
    canvas.width = 550;
    canvas.height = 550;
    var context = canvas.getContext("2d");
    let cameraId = 0;

    function base64() {
      context.drawImage(video, 0, 0, 550, 550);
      return isSending ? canvas.toDataURL("image/jpeg", 0.6) : "";
    }
    function isMobile() {
      var userAgentInfo = navigator.userAgent;
      var mobileAgents = [
        "Android",
        "iPhone",
        "SymbianOS",
        "Windows Phone",
        "iPad",
        "iPod",
      ];
      var mobile_flag = false;
      //根据userAgent判断是否是手机
      for (var v = 0; v < mobileAgents.length; v++) {
        if (userAgentInfo.indexOf(mobileAgents[v]) > 0) {
          mobile_flag = true;
          break;
        }
      }
      return mobile_flag;
    }
    if (navigator.mediaDevices) {
      // 手机端默认启用后置摄像头
      let facingMode = isMobile() ? { exact: "environment" } : "user";
      navigator.mediaDevices
        .getUserMedia({ video: { width: 550, height: 550, facingMode } })
        .then((mediaStream) => {
          video.srcObject = mediaStream;

          document.querySelector(".title").innerHTML = socket.id;
          socket.emit("fps", base64());

          socket.on("connect", function (e) {
            console.log("connected!!", socket.id);
            socket.emit("fps", base64());
          });
          socket.on("received", function (res) {
            socket.emit("fps", base64());
          });
          socket.on("disconnect", function () {
            console.log("disconnect");
          });
        })
        .catch(() => {
          alert("出错了！");
        });
    }
  </script>
</html>
